안녕하십니까?
빅데이터팀의 김민형 프로입니다.
저희가 최종적으로 하고자 하는 것은 로컬서버의 키바나를 통해 물리서버의 정보를 시각화하는 것입니다.
이를 위해서는 
첫 번째, 서버의 정보를 얻어올 수 있는 beats를 선택하고
두 번째, 물리서버에 해당 beats를 설치하며
세 번째, 물리서버와 엘라스틱서치와 키바나가 설치된 로컬서버를 연동해야합니다.
네 번째, 마지막으로 물리서버의 정보를 키바나의 대시보드를 통해 시각화합니다.

우선 beats에 대해 간략히 설명드리겠습니다.
Beats는 특정 목적을 위한 데이터 수집기용 플랫폼입니다. 
경량 에이전트로 설치되어 수백 개 또는 수천 개 데이터를 Logstash 또는 Elasticsearch로 전송합니다.

다음으로 beats의 종류에 대해 간략히 설명드리겠습니다.
beats는 Filebeat, Metricbeat 등 7개로 구성되어 있습니다.
다음 프리젠테이션은 각각의 beats가 하는 일에 대해 설명하고 있습니다.
저희는 물리서버의 정보를 시각화하고 싶기 때문에
서버 및 시스템에서 메트릭을 수집하는 데 사용하는 beats인 Metricbeat를 사용했습니다.

다음으로 물리서버에 Metricbeat 설치 및 물리서버와 로컬서버 연동에 대해 설명드리겠습니다.
왼쪽은 물리서버, 오른쪽은 로컬서버에 해당됩니다.
로컬서버에는 엘라스틱서치와 키바나가 설치된 상태입니다.
이미 아시다시피 엘라스틱서치를 통해 분석된 데이터를 키바나로 시각화할 수 있습니다.
로컬 서버의 키바나를 통해 물리서버의 정보를 시각화하기 위해서는 
물리서버와 로컬서버의 연동이 필요합니다.
저희는 우선 물리서버에 MobaXterm을 이용하여 Metricbeat를 설치했습니다.
그리고 제 로컬서버의 Wi-Fi IP를 이용하여 물리서버와 로컬서버를 연동시켰습니다.
검은 화면은 물리서버에 Metricbeat 설치가 완료된 상황,
하얀 화면은 제 로컬서버의 Wi-Fi IP를 이용하여 물리서버와 로컬서버를 연동시킨 상황입니다.
물리서버와 로컬서버가 연동이 되면 물리서버의 Metrics Data가 로컬서버의 엘라스틱 서치로 이동을 하게 됩니다.
여기서 Metrics Data는 물리서버의 정보를 의미합니다.
그러면, 엘라스틱 서치가 Metrics Data를 분석할 수 있게 되며 이를 키바나를 통해 시각화할 수도 있습니다.
다음은 키바나를 통해 시각화한 대시보드 중 일부입니다.

그러면 제 로컬 서버의 키바나 대시보드를 보실까요?
지금 보시는 대시보드는 제가 직접 만든 것입니다.
최대한 그라파나의 대시보드와 비슷하게 만들려고 노력을 했습니다.
밑에 보시면 그라파나의 대시보드에서 없는 기능을 만들었습니다.

그러면 대시보드를 만드는 방법에 대해 잠깐 설명드리겠습니다.
잠깐 이 PDF를 봐주세요.
빨간색 박스가 쳐져있는 부분은 제가 키바나의 Index patterns를 수정하여 만든 시각화자료입니다.
빨간색 박스가 쳐져있지 않은 부분은 제공되는 변수를 이용하여 만든 시각화자료입니다.
Index patterns을 수정한 자료들은 보통 Set value에서 쿼리문을 이용하여 값을 설정해주었습니다.
load_1_5_15의 경우는 각각의 변수들을 더했으며,
Free Disk Space는 타입을 실수로 바꾼다음에 변수를 나눴습니다.
Uptime처럼 Set format만을 바꾼 경우도 있으며,
MySQL status와 Ping은 값의 존재에 따라 해당되는 값이 나올 수 있도록 수정했습니다.

제가 직접 만든 대시보드 말고 elasticsearch에서 기본적으로 제공하고 있는 대시보드도 보여드릴게요.
우선 Observability의 Overview를 들어가줍니다.
그러면 중간에 Metrics가 보일거예요.
잘 보시면 Uptime,Hostname,CPU,Load 15,RX,TX 기능이 제공되어 있습니다.
Hostname의 iShark를 클릭해볼까요?
클릭해서 들어가면 Host Overview, CPU Usage,Load,Memory Usage,Network Traffic을 제공해줍니다.
다시 Observability 밑에 Metrics를 클릭해볼게요.
우선 Inventory의 정보를 보겠습니다.
show,metric,group by,sort by를 조절할 수 있으며,
시계 옆을 보면 네모형식과 테이블 형식 중 하나로 선택할 수 있습니다.
밑의 show history를 보면 시간별 데이터 수집 로그도 볼 수 있습니다.
물론 시간 설정도 가능하고 검색도 지원해줍니다.
다음은 밑에 있는 Metrics Explorer을 보겠습니다.
 show history과 마찬가지로 시간별 데이터 수집 로그도 볼 수 있습니다.
Average를 클릭하면 많은 변수를 선택할 수 있고 graph per로 변수 선택도 가능합니다.
물론 시간 설정도 가능하고 검색도 지원해줍니다.
단 Observability의 시각화자료는 대시보드로 옮겨서 쓰는 것이 불가능합니다.

다음은 Metricbeat에서 다운 가능한 대시보드 템플릿을 보여드리겠습니다.
Metricbeat는 대시보드 템플릿을 제공해줍니다.
이 면에서 그라파나랑 상당히 비슷하다고 할 수 있습니다.
참고로, Metricbeat의 대시보드 템플릿도 MobaXterm으로 설치하였습니다.
잠깐 저의 MobaXterm을 보겠습니다.
이 화면을 보시면 enable한 기능은 system밖에 없습니다.
그래서 Metricbeat는 대시보드 템플릿도 system과 제 로컬서버에 해당되는 host 두 개만 사용 가능합니다.
Metricbeat는 대시보드 템플릿을 보고 싶으시면 Dashboard를 클릭하면 됩니다.
꺽쇠 안에 Metricbeat라고 써있는 제목들이 다  Metricbeat는 대시보드 템플릿이라 보시면 되겠습니다.
[Metricbeat System] Overview ECS 을 클릭해볼까요?
정보가 탬플렛에 맞춰 잘 나오고 있음을 알 수 있습니다.
[Metricbeat System] Host overview ECS 을 클릭해볼까요?
정보가 탬플렛에 맞춰 잘 나오고 있음을 알 수 있습니다.
반면 unable인 MongoDB의 [Metricbeat MongoDB] Overview ECS을 클릭하겠습니다.
MongoDB에 들어가 있는 데이터가 없기 때문에 정보가 뜨지 않음을 알 수 있습니다.

마지막으로 Metricbeat와 그라파나의 공통점과 차이점을 언급하고 발표를 마치겠습니다.
Metricbeat는 그라파나와 같이 꺾은선, 막대, 측정기, 메트릭스 등 많은 시각화 자료를 제공해줍니다.
또한 그라파나처럼 템플렛을 제공하고 있어서 시각화 자료를 만드는 데 있어서의 수고로움을 덜어줍니다.
자신이 원하는 그래프를 만들고 싶으면 언제든 만들 수 있다는 점에서도 그라파나와 비슷합니다.
시간을 조절할 수 있다는 점에서도 비슷합니다.
하지만 그라파나는 Metricbeat의 Tag cloud 기능이 없습니다.
그러나 그라파나가 디자인이 더 이쁘며 색상선택, 폰트 크기 등의 선택의 폭이 더 넓습니다.

저의 긴 발표를 들어주셔서 정말 감사합니다.
혹시 질문할 사항이 있다면 질문해주시기 바랍니다.